cmake_minimum_required(VERSION 2.6)

# compute module id from compilation path
get_filename_component(list_file_path ${CMAKE_CURRENT_LIST_FILE} PATH)
string(REGEX MATCH "[a-z0-9.-]*$" module_id ${list_file_path})

project (${module_id})

message("configuring vsxu module            " ${module_id})

find_package(Freetype REQUIRED)

# set defines for MOD_CM, MOD_DM, MOD_NM
CREATE_STATIC_GLUE(${module_id})

# find the local source files
file(GLOB SOURCES "*.cpp" "ftgl/*.cpp")
file(GLOB_RECURSE HEADER_FILES *.h)

if(WIN32)
  include_directories(lib/win32/include)
  include_directories(lib/win32/include/freetype2)
endif(WIN32)

if(UNIX)
  include_directories(${FREETYPE_INCLUDE_DIRS})
endif(UNIX)

# include common
include(../cmake_globals.txt)

# actual compilation target
CREATE_MODULE(${module_id})

# include common
include(../cmake_suffix.txt)
