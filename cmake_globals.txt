
if(VSXU_DEBUG_NOPRINTFS)
  add_definitions(-g -Wall)
endif(VSXU_DEBUG_NOPRINTFS)

if(VSXU_DEBUG)
  add_definitions(-g -Wall)
else(VSXU_DEBUG)
  if (OPTIMIZATION_FLAGS EQUAL 1)
    add_definitions(-lrt -lm -O1 -march=opteron -fno-thread-jumps -fno-if-conversion2 -fno-delayed-branch -fno-loop-optimize -ftree-dce -ftree-sra -ftree-copyrename -ftree-fre -ftree-ch -fmerge-constants -fcrossjumping -fcse-follow-jumps -fcse-skip-blocks -fexpensive-optimizations -fstrength-reduce -frerun-cse-after-loop -frerun-loop-opt -fforce-addr -fpeephole2 -fschedule-insns2 -fregmove -freorder-blocks -fsched-interblock -funit-at-a-time -falign-functions -falign-jumps -falign-loops -falign-labels -finline-functions -fno-inline -ftracer -fmodulo-sched -fgcse-sm -freschedule-modulo-scheduled-loops -ftree-loop-im -ftree-loop-ivcanon -maccumulate-outgoing-args -mno-align-stringops -D__NO_MATH_INLINES -funsafe-math-optimizations -fno-signaling-nans)
  else (OPTIMIZATION_FLAGS EQUAL 1)
    add_definitions(-Os -c -fmessage-length=0 -finline-functions)
  endif (OPTIMIZATION_FLAGS EQUAL 1)
endif(VSXU_DEBUG)

#add_definitions(-Os -c -fmessage-length=0 -finline-functions)
#add_definitions(-O3 -c -fmessage-length=0 -finline-functions)

cmake_policy(VERSION 2.6.0)
cmake_policy(SET CMP0015 OLD)
cmake_policy(SET CMP0011 OLD)


if(WIN32)
  include_directories(
    ../lib/win32/
  )
  
  find_path(WINDOWS_LIB_PATH NAMES pthreadGCE.so
    PATHS
      ../../lib/win32
  )
  
  link_directories("../lib/win32")
endif(WIN32)

if(APPLE)
  add_definitions( -DVSXU_MAC_XCODE )
endif(APPLE)
